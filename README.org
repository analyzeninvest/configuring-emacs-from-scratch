
#+TITLE: Configuring Emacs from scratch 
#+EMAIL: analyzeninvest@protonmail.com
#+AUTHOR: Aritra Bhattacharjee

#+BEGIN_QUOTE
The small wisdom is like water in a glass: clear, transparent &
pure. The great wisdom is like the water in the sea: dark, mysterious,
impenetrable. -Rabindranath Tagore
#+END_QUOTE

Hello everyone,

I am using Emacs since 2015. Overtime the configuration file had grown
to be a large 1000 line file with keybindings I do not use anymore &
macros that were replaced by modern packages with newer features.

So, this got me thinking "let me clean it up!"; issue was- inertia. I
didn't wanted to clean packages one by one & fix the
startup. Eventually I decided to delete my .Emacs & make a new one.

I had an even better idea. Make it a video series & post it on
relevant forums. Thus I started creating the video series on:
"configuring Emacs from scratch".

In the following section, I will update my journey with the video &
description for the same. This will include:
- a small summery of the packages that I install
- a brief description of the settings I change
- reason for not including any specific package.

This is my effort to make the Emacs configured from scratch. 
Hope you like it.

* Video 1: (setting up init file & org file for literate programming)

In the first video, I start by deleting my previous .emacs.d
directory. Then I start by creating the init.el & settings.org
file. The init.el file contained the org-babel for elisp code blocks
used in settings.org file.

I liked the idea of /literate programming/. So org mode with the
org-babel tangle feature got me really exited. Thus this became the
first video on how to do so.

In the settings, I always enjoy the full screen Emacs editing with no
GUI mouse click options. Thus following settings are made:
- disable menu bar, tool bar, scroll bar, init splash screen
- enable global linum mode
- no auto save file

#+CAPTION: Screenshot of the first video.
[[file:./snapshot/snap.jpg]]

** Related links for this video

   [[file:settings.org::31][settings org file]]
   
   [[https://www.youtube.com/watch?v=HaCIn5gvJ84&t=3s][YouTube]]
   
   [[https://d.tube/#!/v/cryptoaritra/ivh62sgc][DTube]]
   
   [[https://www.reddit.com/r/emacs/comments/9md7dy/configuring_emacs_from_scratch_01/][Reddit]]

* Video 2: (IDO)

In the next video, continuing with the trend, IDO (interactive Do)
mode specific things are set.  It is a mode that does things
interactively. E.g. if I need to find a file, by default Emacs will
not show the files in the directory, it only shows after 2 tabs are
pressed. This is solved by IDO with a linear list of files or
directory separated by '|' character.

#+CAPTION: Screenshot of the second video.
[[file:./snapshot/snap(1).jpg]]

** Related links for this video

   [[file:settings.org::59][settings org file]]
   
   [[https://www.youtube.com/watch?v=lwrjN9_fHd8&t=345s][YouTube]]
   
   [[https://d.tube/#!/v/cryptoaritra/wlpbl1o6][DTube]]
   
   [[https://www.reddit.com/r/emacs/comments/9oq41w/configuring_emacs_from_scratch_02/][Reddit]]

* Video 3: (melpa package repo, ido grid mode) 
In this section, I set up the melpa package repository for Emacs to
load the packages. Form the repository, I installed the package for
displaying the IDO find files with a grid mode, rather than the
default linear one.

#+CAPTION: Screenshot of the third video.
[[file:./snapshot/snap(2).jpg]]

** Related links for this video

   [[file:settings.org::8][settings org file]]

   [[https://www.youtube.com/watch?v=MeBtczUz0C4&t=303s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/becagfj2][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9pt8yb/configuring_emacs_from_scratch_03/][Reddit]]

* Video 4: (Themes & org bullets)

In this one, I set up the theme for the Emacs. I like to choose the
theme, based on the readability of the code. I like dark contrasting
colors for that job. Also I really like the org bullets package for
making some cool bullets for org mode.

#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(3).jpg]]


** Related links for this video

   [[file:settings.org::269][settings org file]]

   [[https://www.youtube.com/watch?v=Y9BM_mIRHJk][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/rhqfz0gz][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9pt8yb/configuring_emacs_from_scratch_03/][Reddit]]

* Video 5: (key bindings & other setup)

Keybinding is one of the important aspect of the Emacs. In this video
I remap some of the keybindings:

- hippie-expand
- backward-kill-word
- backward-delete-char
- replace-string
- replace-regex
- count-matches

#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(4).jpg]]

** Related links for this video

   [[file:settings.org::259][settings org file]]   

   [[https://www.youtube.com/watch?v=9l0mhBXpEW0&t=524s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/gggoc83h][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9qqvpg/configuring_emacs_from_scratch_05/][Reddit]]

* Video 6: (ivy + counsel + swiper)

The default isearch, M-x, switch-buffer of Emacs is nice, but to make
it nicer, ivy + swiper (replacement of isearch) + counsel (replacement
of find-file switch-buffer etc). I set the keybindings for the swiper
but do not replace the find-file. I like the IDO feature for the find
file.

#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(5).jpg]]


** Related links for this video

   [[file:settings.org::116][settings org file]]

   [[https://www.youtube.com/watch?v=tvT5-czpNGc&t=34s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/3td97p72][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9re7tw/configuring_emacs_from_scratch_06/][Reddit]]

* Video 7: (magit)

In this video, I install & set up magit. Magit or Emacs got git is a
great package for using git inside Emacs.


#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(6).jpg]]


** Related links for this video

   [[file:settings.org::180][settings org file]]

   [[https://www.youtube.com/watch?v=CXAoFRPpGh0&t=189s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/hjyxksu6][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9s487j/configuring_emacs_from_scratch_07_magit/][Reddit]]

* Video 8: (iedit & paredit)
For the 8Th video, I am setting up 2 very useful packages for coding. 

1. iedit:
iedit is for interactive editing. Say we need to edit the name of the
variable in a defun/buffer. For that we can interactively search &
replace. I find it better to use the iedit package. If I place the
point below the symbol & start iedit, it replaces the symbol in the
buffer. Same can be done with line, defun or in a region with
narrow-region.
2. paredit:
paredit is most useful when we use the elisp codes. It has many useful
features like keeping braces & quotes balanced, burfage / slurpage of
the braces, joining 2 sexp, splitting 2 sexp, making escape string etc
to name a few.

#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(7).jpg]]

** Related links for this video

   [[file:settings.org::188][settings org file]]

   [[https://www.youtube.com/watch?v=xrNOLTAl1ug&t=137s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/c731o52e][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9sqp84/configuring_emacs_from_scratch_08/][Reddit]]

* Video 9: (company anaconda company-quickhelp company-anaconda)
Next, we need to have some sort of autocomplete features in Emacs
while coding. There are 2 primary packages for doing that job:
1. auto-complete
2. company

Both packages are great, but personally I like company mode
better. This does come with a drawback. To get all the features in
autocomplete in Python, we need some more packages, namely:
1. company-quickhelp: for displaying the doc string
2. anaconda: for running python based autocomplete
3. company-anaconda: for running anaconda with company

But overall I find it useful.

#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(8).jpg]]

** Related links for this video

   [[file:settings.org::217][settings org file]]

   [[https://www.youtube.com/watch?v=cSm3doCNyko&t=74s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/qkndfusf][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9tmt9v/configuring_emacs_from_scratch_09_company/][Reddit]]

* Video 10: (yasnippets with company)

In order to get some quick scripting in Emacs, we installed the
package called yasnippets (yet another snippets).

The default package for yasnippets do not contain any snippets. For
that, we need yasnippets snippets.

Now by default, it is expected to work seamlessly with [tabs] but that
kind of conflicts with the company mode's auto feature sometime. What
I found was, we need to have an extra space to get it working. I did
not lie that behaviour. So I bounded it to M-z which by default is
zap-to-char, but I hardly needed that feature, so I remapped it.

#+CAPTION: Screenshot of the forth video.
[[file:./snapshot/snap(9).jpg]]

** Related links for this video

   [[file:settings.org::245][settings org file]]

   [[https://www.youtube.com/watch?v=u1P1Zm53D9w&t=274s][YouTube]]

   [[https://d.tube/#!/v/cryptoaritra/4edknmnb][DTube]]

   [[https://www.reddit.com/r/emacs/comments/9v23r6/configuring_emacs_from_scratch_10_yasnippets/][Reddit]]
